# -*- coding: utf-8 -*-
# flake8:noqa
# isort:skip_file
# vim:et:ft=python:nowrap:sts=4:sw=4:ts=4
##############################################################################
# Note: Generated by soapfish.wsdl2py at 2018-02-27 13:58:55.377340
#       Try to avoid editing it if you might need to regenerate it.
##############################################################################

from soapfish import soap, xsd
from pyfva.soap import settings
BaseHeader = xsd.ComplexType

##############################################################################
# Schemas


# http://bccr.fva.cr/


class AlgoritmoDeHash(xsd.String):
    enumeration = ['Sha256', 'Sha384', 'Sha512']


class SolicitudDeFirma(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    ExtensionData = xsd.Element(__name__ + '.ExtensionDataObject', minOccurs=0)
    CodNegocio = xsd.Element(xsd.Int, minOccurs=1)
    Documento = xsd.Element(xsd.Base64Binary, minOccurs=0)
    FechaDeReferenciaDeLaEntidad = xsd.Element(xsd.DateTime, minOccurs=1)
    HashDocumento = xsd.Element(xsd.Base64Binary, minOccurs=0)
    IDAlgoritmoHash = xsd.Element(AlgoritmoDeHash, minOccurs=1)
    IdFuncionalidad = xsd.Element(xsd.Int, minOccurs=1)
    IdReferenciaEntidad = xsd.Element(xsd.Int, minOccurs=1)
    IdentificacionDelSuscriptor = xsd.Element(xsd.String, minOccurs=0)
    ResumenDocumento = xsd.Element(xsd.String, minOccurs=0)

    @classmethod
    def create(cls, CodNegocio, FechaDeReferenciaDeLaEntidad, IDAlgoritmoHash, IdFuncionalidad, IdReferenciaEntidad):
        instance = cls()
        instance.CodNegocio = CodNegocio
        instance.FechaDeReferenciaDeLaEntidad = FechaDeReferenciaDeLaEntidad
        instance.IDAlgoritmoHash = IDAlgoritmoHash
        instance.IdFuncionalidad = IdFuncionalidad
        instance.IdReferenciaEntidad = IdReferenciaEntidad
        return instance


class ExtensionDataObject(xsd.ComplexType):
    pass


class RespuestaDeLaSolicitud(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    CodigoDeError = xsd.Element(xsd.Int, minOccurs=1)
    CodigoDeVerificacion = xsd.Element(xsd.String, minOccurs=0)
    TiempoMaximoDeFirmaEnSegundos = xsd.Element(xsd.Int, minOccurs=1)
    IdDeLaSolicitud = xsd.Element(xsd.Int, minOccurs=1)

    @classmethod
    def create(cls, CodigoDeError, TiempoMaximoDeFirmaEnSegundos, IdDeLaSolicitud, CodigoDeVerificacion=None):
        instance = cls()
        instance.CodigoDeError = CodigoDeError
        instance.TiempoMaximoDeFirmaEnSegundos = TiempoMaximoDeFirmaEnSegundos
        instance.IdDeLaSolicitud = IdDeLaSolicitud
        if CodigoDeVerificacion:
            instance.CodigoDeVerificacion = CodigoDeVerificacion
        return instance


class SolicitudDeFirmaPdf(SolicitudDeFirma):
    INHERITANCE = xsd.Inheritance.EXTENSION
    INDICATOR = xsd.Sequence
    Lugar = xsd.Element(xsd.String, minOccurs=0)
    RazonDeFirma = xsd.Element(xsd.String, minOccurs=0)

    @classmethod
    def create(cls, CodNegocio, FechaDeReferenciaDeLaEntidad, 
	IDAlgoritmoHash, IdFuncionalidad, IdReferenciaEntidad,
	Lugar = None, RazonDeFirma = None):
        instance = cls()
        instance.CodNegocio = CodNegocio
        instance.FechaDeReferenciaDeLaEntidad = FechaDeReferenciaDeLaEntidad
        instance.IDAlgoritmoHash = IDAlgoritmoHash
        instance.IdFuncionalidad = IdFuncionalidad
        instance.IdReferenciaEntidad = IdReferenciaEntidad
        if Lugar:
            instance.Lugar = Lugar
        if RazonDeFirma:
            instance.RazonDeFirma = RazonDeFirma
        return instance


class RecibaLaSolicitudDeFirmaXmlEnvelopedCoFirma(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    laSolicitud = xsd.Element(SolicitudDeFirma, minOccurs=0)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class RecibaLaSolicitudDeFirmaXmlEnvelopedCoFirmaResponse(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    RecibaLaSolicitudDeFirmaXmlEnvelopedCoFirmaResult = xsd.Element(RespuestaDeLaSolicitud, minOccurs=0)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class RecibaLaSolicitudDeFirmaXmlEnvelopedContraFirma(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    laSolicitud = xsd.Element(SolicitudDeFirma, minOccurs=0)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class RecibaLaSolicitudDeFirmaXmlEnvelopedContraFirmaResponse(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    RecibaLaSolicitudDeFirmaXmlEnvelopedContraFirmaResult = xsd.Element(RespuestaDeLaSolicitud, minOccurs=0)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class RecibaLaSolicitudDeFirmaODF(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    laSolicitud = xsd.Element(SolicitudDeFirma, minOccurs=0)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class RecibaLaSolicitudDeFirmaODFResponse(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    RecibaLaSolicitudDeFirmaODFResult = xsd.Element(RespuestaDeLaSolicitud, minOccurs=0)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class RecibaLaSolicitudDeFirmaMSOffice(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    laSolicitud = xsd.Element(SolicitudDeFirma, minOccurs=0)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class RecibaLaSolicitudDeFirmaMSOfficeResponse(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    RecibaLaSolicitudDeFirmaMSOfficeResult = xsd.Element(RespuestaDeLaSolicitud, minOccurs=0)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class RecibaLaSolicitudDeFirmaPdf(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    laSolicitud = xsd.Element(SolicitudDeFirmaPdf, minOccurs=0)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class RecibaLaSolicitudDeFirmaPdfResponse(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    RecibaLaSolicitudDeFirmaPdfResult = xsd.Element(RespuestaDeLaSolicitud, minOccurs=0)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class ElSuscriptorEstaConectado(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    laIdentificacion = xsd.Element(xsd.String, minOccurs=0)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class ElSuscriptorEstaConectadoResponse(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    ElSuscriptorEstaConectadoResult = xsd.Element(xsd.Boolean, minOccurs=1)

    @classmethod
    def create(cls, ElSuscriptorEstaConectadoResult):
        instance = cls()
        instance.ElSuscriptorEstaConectadoResult = ElSuscriptorEstaConectadoResult
        return instance


class ValideElServicio(xsd.ComplexType):
    pass


class ValideElServicioResponse(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    ValideElServicioResult = xsd.Element(xsd.Boolean, minOccurs=1)

    @classmethod
    def create(cls, ValideElServicioResult):
        instance = cls()
        instance.ValideElServicioResult = ValideElServicioResult
        return instance


Schema_c49e7 = xsd.Schema(
    imports=[],
    includes=[],
    targetNamespace=settings.FVA_HOST,
    elementFormDefault='qualified',
    simpleTypes=[AlgoritmoDeHash],
    attributeGroups=[],
    groups=[],
    complexTypes=[SolicitudDeFirma, ExtensionDataObject, RespuestaDeLaSolicitud, SolicitudDeFirmaPdf],
    elements={'RecibaLaSolicitudDeFirmaXmlEnvelopedCoFirma': xsd.Element(RecibaLaSolicitudDeFirmaXmlEnvelopedCoFirma()), 'RecibaLaSolicitudDeFirmaXmlEnvelopedCoFirmaResponse': xsd.Element(RecibaLaSolicitudDeFirmaXmlEnvelopedCoFirmaResponse()), 'RecibaLaSolicitudDeFirmaXmlEnvelopedContraFirma': xsd.Element(RecibaLaSolicitudDeFirmaXmlEnvelopedContraFirma()), 'RecibaLaSolicitudDeFirmaXmlEnvelopedContraFirmaResponse': xsd.Element(RecibaLaSolicitudDeFirmaXmlEnvelopedContraFirmaResponse()), 'RecibaLaSolicitudDeFirmaODF': xsd.Element(RecibaLaSolicitudDeFirmaODF()), 'RecibaLaSolicitudDeFirmaODFResponse': xsd.Element(RecibaLaSolicitudDeFirmaODFResponse()), 'RecibaLaSolicitudDeFirmaMSOffice': xsd.Element(RecibaLaSolicitudDeFirmaMSOffice()), 'RecibaLaSolicitudDeFirmaMSOfficeResponse': xsd.Element(RecibaLaSolicitudDeFirmaMSOfficeResponse()), 'RecibaLaSolicitudDeFirmaPdf': xsd.Element(RecibaLaSolicitudDeFirmaPdf()), 'RecibaLaSolicitudDeFirmaPdfResponse': xsd.Element(RecibaLaSolicitudDeFirmaPdfResponse()), 'ElSuscriptorEstaConectado': xsd.Element(ElSuscriptorEstaConectado()), 'ElSuscriptorEstaConectadoResponse': xsd.Element(ElSuscriptorEstaConectadoResponse()), 'ValideElServicio': xsd.Element(ValideElServicio()), 'ValideElServicioResponse': xsd.Element(ValideElServicioResponse())},
)


##############################################################################
# Methods


RecibaLaSolicitudDeFirmaXmlEnvelopedCoFirma_method = xsd.Method(
    soapAction=settings.FVA_HOST + 'RecibaLaSolicitudDeFirmaXmlEnvelopedCoFirma',
    input='RecibaLaSolicitudDeFirmaXmlEnvelopedCoFirma',
    inputPartName='parameters',
    output='RecibaLaSolicitudDeFirmaXmlEnvelopedCoFirmaResponse',
    outputPartName='parameters',
    operationName='RecibaLaSolicitudDeFirmaXmlEnvelopedCoFirma',
    style='document',
)


RecibaLaSolicitudDeFirmaXmlEnvelopedContraFirma_method = xsd.Method(
    soapAction=settings.FVA_HOST + 'RecibaLaSolicitudDeFirmaXmlEnvelopedContraFirma',
    input='RecibaLaSolicitudDeFirmaXmlEnvelopedContraFirma',
    inputPartName='parameters',
    output='RecibaLaSolicitudDeFirmaXmlEnvelopedContraFirmaResponse',
    outputPartName='parameters',
    operationName='RecibaLaSolicitudDeFirmaXmlEnvelopedContraFirma',
    style='document',
)


RecibaLaSolicitudDeFirmaODF_method = xsd.Method(
    soapAction=settings.FVA_HOST + 'RecibaLaSolicitudDeFirmaODF',
    input='RecibaLaSolicitudDeFirmaODF',
    inputPartName='parameters',
    output='RecibaLaSolicitudDeFirmaODFResponse',
    outputPartName='parameters',
    operationName='RecibaLaSolicitudDeFirmaODF',
    style='document',
)


RecibaLaSolicitudDeFirmaMSOffice_method = xsd.Method(
    soapAction=settings.FVA_HOST + 'RecibaLaSolicitudDeFirmaMSOffice',
    input='RecibaLaSolicitudDeFirmaMSOffice',
    inputPartName='parameters',
    output='RecibaLaSolicitudDeFirmaMSOfficeResponse',
    outputPartName='parameters',
    operationName='RecibaLaSolicitudDeFirmaMSOffice',
    style='document',
)


RecibaLaSolicitudDeFirmaPdf_method = xsd.Method(
    soapAction=settings.FVA_HOST + 'RecibaLaSolicitudDeFirmaPdf',
    input='RecibaLaSolicitudDeFirmaPdf',
    inputPartName='parameters',
    output='RecibaLaSolicitudDeFirmaPdfResponse',
    outputPartName='parameters',
    operationName='RecibaLaSolicitudDeFirmaPdf',
    style='document',
)


ElSuscriptorEstaConectado_method = xsd.Method(
    soapAction=settings.FVA_HOST + 'ElSuscriptorEstaConectado',
    input='ElSuscriptorEstaConectado',
    inputPartName='parameters',
    output='ElSuscriptorEstaConectadoResponse',
    outputPartName='parameters',
    operationName='ElSuscriptorEstaConectado',
    style='document',
)


ValideElServicio_method = xsd.Method(
    soapAction=settings.FVA_HOST + 'ValideElServicio',
    input='ValideElServicio',
    inputPartName='parameters',
    output='ValideElServicioResponse',
    outputPartName='parameters',
    operationName='ValideElServicio',
    style='document',
)


##############################################################################
# SOAP Service


FirmadorSoap_SERVICE = soap.Service(
    name='FirmadorSoap',
    targetNamespace=settings.FVA_HOST,
    location='${scheme}://${host}/WebServices/Bccr.Firma.Fva.Entidades.Ws.BS/Firmador.asmx',
    schemas=[Schema_c49e7],
    version=soap.SOAPVersion.SOAP12,
    methods=[RecibaLaSolicitudDeFirmaXmlEnvelopedCoFirma_method, RecibaLaSolicitudDeFirmaXmlEnvelopedContraFirma_method, RecibaLaSolicitudDeFirmaODF_method, RecibaLaSolicitudDeFirmaMSOffice_method, RecibaLaSolicitudDeFirmaPdf_method, ElSuscriptorEstaConectado_method, ValideElServicio_method],
)


##############################################################################
# SOAP Service Stub


class FirmadorSoapServiceStub(soap.Stub):
    SERVICE = FirmadorSoap_SERVICE
    SCHEME = settings.STUB_SCHEME
    HOST = settings.STUB_HOST

    def RecibaLaSolicitudDeFirmaXmlEnvelopedCoFirma(self, RecibaLaSolicitudDeFirmaXmlEnvelopedCoFirma, header=None):
        return self.call('RecibaLaSolicitudDeFirmaXmlEnvelopedCoFirma', RecibaLaSolicitudDeFirmaXmlEnvelopedCoFirma, header=header)

    def RecibaLaSolicitudDeFirmaXmlEnvelopedContraFirma(self, RecibaLaSolicitudDeFirmaXmlEnvelopedContraFirma, header=None):
        return self.call('RecibaLaSolicitudDeFirmaXmlEnvelopedContraFirma', RecibaLaSolicitudDeFirmaXmlEnvelopedContraFirma, header=header)

    def RecibaLaSolicitudDeFirmaODF(self, RecibaLaSolicitudDeFirmaODF, header=None):
        return self.call('RecibaLaSolicitudDeFirmaODF', RecibaLaSolicitudDeFirmaODF, header=header)

    def RecibaLaSolicitudDeFirmaMSOffice(self, RecibaLaSolicitudDeFirmaMSOffice, header=None):
        return self.call('RecibaLaSolicitudDeFirmaMSOffice', RecibaLaSolicitudDeFirmaMSOffice, header=header)

    def RecibaLaSolicitudDeFirmaPdf(self, RecibaLaSolicitudDeFirmaPdf, header=None):
        return self.call('RecibaLaSolicitudDeFirmaPdf', RecibaLaSolicitudDeFirmaPdf, header=header)

    def ElSuscriptorEstaConectado(self, ElSuscriptorEstaConectado, header=None):
        return self.call('ElSuscriptorEstaConectado', ElSuscriptorEstaConectado, header=header)

    def ValideElServicio(self, ValideElServicio, header=None):
        return self.call('ValideElServicio', ValideElServicio, header=header)
