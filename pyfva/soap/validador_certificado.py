# -*- coding: utf-8 -*-
# flake8:noqa
# isort:skip_file
# vim:et:ft=python:nowrap:sts=4:sw=4:ts=4
##############################################################################
# Note: Generated by soapfish.wsdl2py at 2018-02-27 14:10:02.606459
#       Try to avoid editing it if you might need to regenerate it.
##############################################################################

from soapfish import soap, xsd
from pyfva.soap import settings
BaseHeader = xsd.ComplexType

##############################################################################
# Schemas


# http://bccr.fva.cr/


class ResultadoDeLaSolicitud(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    CodigoDeError = xsd.Element(xsd.Int, minOccurs=1)
    FueExitosa = xsd.Element(xsd.Boolean, minOccurs=1)
    InformacionDelCertificado = xsd.Element(__name__ + '.InformacionDelCertificado', minOccurs=0)

    @classmethod
    def create(cls, CodigoDeError, FueExitosa):
        instance = cls()
        instance.CodigoDeError = CodigoDeError
        instance.FueExitosa = FueExitosa
        return instance


class InformacionDelCertificado(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    Identificacion = xsd.Element(xsd.String, minOccurs=0)
    NombreCompleto = xsd.Element(xsd.String, minOccurs=0)
    FechaInicioDeLaVigencia = xsd.Element(xsd.DateTime, minOccurs=1)
    FechaFinalDeLaVigencia = xsd.Element(xsd.DateTime, minOccurs=1)

    @classmethod
    def create(cls, FechaInicioDeLaVigencia, FechaFinalDeLaVigencia):
        instance = cls()
        instance.FechaInicioDeLaVigencia = FechaInicioDeLaVigencia
        instance.FechaFinalDeLaVigencia = FechaFinalDeLaVigencia
        return instance


class SoliciteLaValidacionDeCetificadoDeAutenticacion(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    elCertificadoDeAutenticacion = xsd.Element(xsd.Base64Binary, minOccurs=0)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class SoliciteLaValidacionDeCetificadoDeAutenticacionResponse(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    SoliciteLaValidacionDeCetificadoDeAutenticacionResult = xsd.Element(ResultadoDeLaSolicitud, minOccurs=0)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class ValideElServicio(xsd.ComplexType):
    pass


class ValideElServicioResponse(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    ValideElServicioResult = xsd.Element(xsd.Boolean, minOccurs=1)

    @classmethod
    def create(cls, ValideElServicioResult):
        instance = cls()
        instance.ValideElServicioResult = ValideElServicioResult
        return instance


Schema_c49e7 = xsd.Schema(
    imports=[],
    includes=[],
    targetNamespace=settings.FVA_HOST,
    elementFormDefault='qualified',
    simpleTypes=[],
    attributeGroups=[],
    groups=[],
    complexTypes=[ResultadoDeLaSolicitud, InformacionDelCertificado],
    elements={'SoliciteLaValidacionDeCetificadoDeAutenticacion': xsd.Element(SoliciteLaValidacionDeCetificadoDeAutenticacion()), 'SoliciteLaValidacionDeCetificadoDeAutenticacionResponse': xsd.Element(SoliciteLaValidacionDeCetificadoDeAutenticacionResponse()), 'ValideElServicio': xsd.Element(ValideElServicio()), 'ValideElServicioResponse': xsd.Element(ValideElServicioResponse())},
)


##############################################################################
# Methods


SoliciteLaValidacionDeCetificadoDeAutenticacion_method = xsd.Method(
    soapAction=settings.FVA_HOST + 'SoliciteLaValidacionDeCetificadoDeAutenticacion',
    input='SoliciteLaValidacionDeCetificadoDeAutenticacion',
    inputPartName='parameters',
    output='SoliciteLaValidacionDeCetificadoDeAutenticacionResponse',
    outputPartName='parameters',
    operationName='SoliciteLaValidacionDeCetificadoDeAutenticacion',
    style='document',
)


ValideElServicio_method = xsd.Method(
    soapAction=settings.FVA_HOST + 'ValideElServicio',
    input='ValideElServicio',
    inputPartName='parameters',
    output='ValideElServicioResponse',
    outputPartName='parameters',
    operationName='ValideElServicio',
    style='document',
)


##############################################################################
# SOAP Service


ValidadorDeCertificadoSoap_SERVICE = soap.Service(
    name='ValidadorDeCertificadoSoap',
    targetNamespace=settings.FVA_HOST,
    location='${scheme}://${host}/WebServices/Bccr.Firma.Fva.Entidades.Ws.BS/ValidadorDeCertificado.asmx',
    schemas=[Schema_c49e7],
    version=soap.SOAPVersion.SOAP12,
    methods=[SoliciteLaValidacionDeCetificadoDeAutenticacion_method, ValideElServicio_method],
)


##############################################################################
# SOAP Service Stub


class ValidadorDeCertificadoSoapServiceStub(soap.Stub):
    SERVICE = ValidadorDeCertificadoSoap_SERVICE
    SCHEME = settings.STUB_SCHEME
    HOST = settings.STUB_HOST

    def SoliciteLaValidacionDeCetificadoDeAutenticacion(self, SoliciteLaValidacionDeCetificadoDeAutenticacion, header=None):
        return self.call('SoliciteLaValidacionDeCetificadoDeAutenticacion', SoliciteLaValidacionDeCetificadoDeAutenticacion, header=header)

    def ValideElServicio(self, ValideElServicio, header=None):
        return self.call('ValideElServicio', ValideElServicio, header=header)
