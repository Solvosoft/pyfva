# flake8:noqa
# isort:skip_file
##############################################################################
# Note: Generated by soapfish.wsdl2py at 2021-05-20 04:15:59.262951+00:00
#       Try to avoid editing it if you might need to regenerate it.
##############################################################################

from soapfish import soap, xsd
from pyfva.soap import settings
BaseHeader = xsd.ComplexType

##############################################################################
# Schemas


# http://bccr.fva.cr/


class ResultadoValidacion(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    FueExitosa = xsd.Element(xsd.Boolean, minOccurs=1)
    ErrorGeneradoAlValidar = xsd.Element(xsd.String, minOccurs=0)
    Firmas = xsd.Element(__name__ + '.ArrayOfFirma', minOccurs=0)
    Resumen = xsd.Element(__name__ + '.ResumenDelResultadoDeValidacion', minOccurs=0)

    @classmethod
    def create(cls, FueExitosa):
        instance = cls()
        instance.FueExitosa = FueExitosa
        return instance


class ArrayOfFirma(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    Firma = xsd.ListElement(__name__ + '.Firma', tagname='Firma', minOccurs=0, maxOccurs=xsd.UNBOUNDED, nillable=True)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class Firma(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    EsValida = xsd.Element(xsd.Boolean, minOccurs=1)
    GarantiaDeIntegridadYAutenticidad = xsd.Element(xsd.Boolean, minOccurs=1)
    GarantiaDeValidezEnElTiempo = xsd.Element(__name__ + '.GarantiaDeValidezEnElTiempo', minOccurs=0)
    Detalle = xsd.Element(__name__ + '.Detalle', minOccurs=0)
    AutoriaDelFirmante = xsd.Element(__name__ + '.AutoriaDelFirmante', minOccurs=0)
    OcurrioUnError = xsd.Element(xsd.Boolean, minOccurs=1)
    DetalleDelError = xsd.Element(xsd.String, minOccurs=0)
    EsAvanzada = xsd.Element(xsd.Boolean, minOccurs=1)

    @classmethod
    def create(cls, EsValida, GarantiaDeIntegridadYAutenticidad, OcurrioUnError, EsAvanzada):
        instance = cls()
        instance.EsValida = EsValida
        instance.GarantiaDeIntegridadYAutenticidad = GarantiaDeIntegridadYAutenticidad
        instance.OcurrioUnError = OcurrioUnError
        instance.EsAvanzada = EsAvanzada
        return instance


class GarantiaDeValidezEnElTiempo(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    Resultado = xsd.Element(xsd.Int, minOccurs=1)
    MensajeDeAdvertencia = xsd.Element(xsd.String, minOccurs=0)

    @classmethod
    def create(cls, Resultado):
        instance = cls()
        instance.Resultado = Resultado
        return instance


class Detalle(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    Integridad = xsd.Element(__name__ + '.Integridad', minOccurs=0)
    JerarquiaDeConfianza = xsd.Element(__name__ + '.JerarquiaDeConfianza', minOccurs=0)
    Vigencia = xsd.Element(__name__ + '.Vigencia', minOccurs=0)
    TipoDeCertificado = xsd.Element(__name__ + '.TipoDeCertificado', minOccurs=0)
    Revocacion = xsd.Element(__name__ + '.Revocacion', minOccurs=0)
    FechaOficialDeLaFirma = xsd.Element(__name__ + '.FechaOficialDeLaFirma', minOccurs=0)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class Integridad(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    EstadoRespuesta = xsd.Element(xsd.Boolean, minOccurs=1)
    Respuesta = xsd.Element(xsd.String, minOccurs=0)
    CodigoRespuesta = xsd.Element(xsd.Int, minOccurs=1)
    SeEvalua = xsd.Element(xsd.Boolean, minOccurs=1)

    @classmethod
    def create(cls, EstadoRespuesta, CodigoRespuesta, SeEvalua):
        instance = cls()
        instance.EstadoRespuesta = EstadoRespuesta
        instance.CodigoRespuesta = CodigoRespuesta
        instance.SeEvalua = SeEvalua
        return instance


class JerarquiaDeConfianza(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    EstadoRespuesta = xsd.Element(xsd.Int, minOccurs=1)
    Respuesta = xsd.Element(xsd.String, minOccurs=0)
    CodigoRespuesta = xsd.Element(xsd.Int, minOccurs=1)
    SeEvalua = xsd.Element(xsd.Boolean, minOccurs=1)

    @classmethod
    def create(cls, EstadoRespuesta, CodigoRespuesta, SeEvalua):
        instance = cls()
        instance.EstadoRespuesta = EstadoRespuesta
        instance.CodigoRespuesta = CodigoRespuesta
        instance.SeEvalua = SeEvalua
        return instance


class Vigencia(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    EstadoRespuesta = xsd.Element(xsd.Boolean, minOccurs=1)
    Respuesta = xsd.Element(xsd.String, minOccurs=0)
    CodigoRespuesta = xsd.Element(xsd.Int, minOccurs=1)
    SeEvalua = xsd.Element(xsd.Boolean, minOccurs=1)

    @classmethod
    def create(cls, EstadoRespuesta, CodigoRespuesta, SeEvalua):
        instance = cls()
        instance.EstadoRespuesta = EstadoRespuesta
        instance.CodigoRespuesta = CodigoRespuesta
        instance.SeEvalua = SeEvalua
        return instance


class TipoDeCertificado(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    EstadoRespuesta = xsd.Element(xsd.Int, minOccurs=1)
    Respuesta = xsd.Element(xsd.String, minOccurs=0)
    CodigoRespuesta = xsd.Element(xsd.Int, minOccurs=1)
    SeEvalua = xsd.Element(xsd.Boolean, minOccurs=1)

    @classmethod
    def create(cls, EstadoRespuesta, CodigoRespuesta, SeEvalua):
        instance = cls()
        instance.EstadoRespuesta = EstadoRespuesta
        instance.CodigoRespuesta = CodigoRespuesta
        instance.SeEvalua = SeEvalua
        return instance


class Revocacion(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    EstadoRespuesta = xsd.Element(xsd.Int, minOccurs=1)
    Respuesta = xsd.Element(xsd.String, minOccurs=0)
    CodigoRespuesta = xsd.Element(xsd.Int, minOccurs=1)
    SeEvalua = xsd.Element(xsd.Boolean, minOccurs=1)

    @classmethod
    def create(cls, EstadoRespuesta, CodigoRespuesta, SeEvalua):
        instance = cls()
        instance.EstadoRespuesta = EstadoRespuesta
        instance.CodigoRespuesta = CodigoRespuesta
        instance.SeEvalua = SeEvalua
        return instance


class FechaOficialDeLaFirma(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    EstadoRespuesta = xsd.Element(xsd.Boolean, minOccurs=1)
    Respuesta = xsd.Element(xsd.String, minOccurs=0)
    CodigoRespuesta = xsd.Element(xsd.Int, minOccurs=1)
    SeEvalua = xsd.Element(xsd.Boolean, minOccurs=1)
    FechaDeLaEstamaDeTiempo = xsd.Element(xsd.DateTime, minOccurs=1)

    @classmethod
    def create(cls, EstadoRespuesta, CodigoRespuesta, SeEvalua, FechaDeLaEstamaDeTiempo):
        instance = cls()
        instance.EstadoRespuesta = EstadoRespuesta
        instance.CodigoRespuesta = CodigoRespuesta
        instance.SeEvalua = SeEvalua
        instance.FechaDeLaEstamaDeTiempo = FechaDeLaEstamaDeTiempo
        return instance


class AutoriaDelFirmante(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    Nombre = xsd.Element(xsd.String, minOccurs=0)
    Identificacion = xsd.Element(xsd.String, minOccurs=0)
    SeObtuvoAutoria = xsd.Element(xsd.Boolean, minOccurs=1)

    @classmethod
    def create(cls, SeObtuvoAutoria):
        instance = cls()
        instance.SeObtuvoAutoria = SeObtuvoAutoria
        return instance


class ResumenDelResultadoDeValidacion(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    GarantiaDeIntegridadYAutenticidad = xsd.Element(xsd.Boolean, minOccurs=1)
    GarantiaDeValidezEnElTiempo = xsd.Element(xsd.Boolean, minOccurs=1)
    ResumenDeFirmas = xsd.Element(__name__ + '.ArrayOfResumenDeFirma', minOccurs=0)
    ResultadoValidacionDelDocumentoFirmado = xsd.Element(xsd.Int, minOccurs=1)

    @classmethod
    def create(cls, GarantiaDeIntegridadYAutenticidad, GarantiaDeValidezEnElTiempo, ResultadoValidacionDelDocumentoFirmado):
        instance = cls()
        instance.GarantiaDeIntegridadYAutenticidad = GarantiaDeIntegridadYAutenticidad
        instance.GarantiaDeValidezEnElTiempo = GarantiaDeValidezEnElTiempo
        instance.ResultadoValidacionDelDocumentoFirmado = ResultadoValidacionDelDocumentoFirmado
        return instance


class ArrayOfResumenDeFirma(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    ResumenDeFirma = xsd.ListElement(__name__ + '.ResumenDeFirma', tagname='ResumenDeFirma', minOccurs=0, maxOccurs=xsd.UNBOUNDED, nillable=True)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class ResumenDeFirma(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    Firmante = xsd.Element(xsd.String, minOccurs=0)
    Identificacion = xsd.Element(xsd.String, minOccurs=0)
    GarantiaDeIntegridadYAutenticidad = xsd.Element(xsd.Boolean, minOccurs=1)
    GarantiaDeValidezEnElTiempo = xsd.Element(xsd.Boolean, minOccurs=1)
    ResultadoValidacion = xsd.Element(xsd.Int, minOccurs=1)
    FechaEstampaDeTiempo = xsd.Element(xsd.DateTime, minOccurs=1)
    TipoIdentificacion = xsd.Element(xsd.Int, minOccurs=1)
    TieneFechaEstampaDeTiempo = xsd.Element(xsd.Boolean, minOccurs=1)

    @classmethod
    def create(cls, GarantiaDeIntegridadYAutenticidad, GarantiaDeValidezEnElTiempo, ResultadoValidacion, FechaEstampaDeTiempo, TipoIdentificacion, TieneFechaEstampaDeTiempo):
        instance = cls()
        instance.GarantiaDeIntegridadYAutenticidad = GarantiaDeIntegridadYAutenticidad
        instance.GarantiaDeValidezEnElTiempo = GarantiaDeValidezEnElTiempo
        instance.ResultadoValidacion = ResultadoValidacion
        instance.FechaEstampaDeTiempo = FechaEstampaDeTiempo
        instance.TipoIdentificacion = TipoIdentificacion
        instance.TieneFechaEstampaDeTiempo = TieneFechaEstampaDeTiempo
        return instance


class ValideElDocumentoPdf(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    elDocumentoPdf = xsd.Element(xsd.Base64Binary, minOccurs=0)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class ValideElDocumentoPdfResponse(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    ValideElDocumentoPdfResult = xsd.Element(ResultadoValidacion, minOccurs=0)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class ValideElDocumentoXmlEnvelopedContraFirma(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    elDocumento = xsd.Element(xsd.Base64Binary, minOccurs=0)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class ValideElDocumentoXmlEnvelopedContraFirmaResponse(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    ValideElDocumentoXmlEnvelopedContraFirmaResult = xsd.Element(ResultadoValidacion, minOccurs=0)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class ValideElDocumentoXmlEnvelopedCoFirma(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    elDocumento = xsd.Element(xsd.Base64Binary, minOccurs=0)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class ValideElDocumentoXmlEnvelopedCoFirmaResponse(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    ValideElDocumentoXmlEnvelopedCoFirmaResult = xsd.Element(ResultadoValidacion, minOccurs=0)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class ValideElDocumentoMSOffice(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    elDocumento = xsd.Element(xsd.Base64Binary, minOccurs=0)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class ValideElDocumentoMSOfficeResponse(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    ValideElDocumentoMSOfficeResult = xsd.Element(ResultadoValidacion, minOccurs=0)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class ValideElDocumentoOdf(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    elDocumento = xsd.Element(xsd.Base64Binary, minOccurs=0)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class ValideElDocumentoOdfResponse(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    ValideElDocumentoOdfResult = xsd.Element(ResultadoValidacion, minOccurs=0)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class ValideElServicio(xsd.ComplexType):
    pass


class ValideElServicioResponse(xsd.ComplexType):
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    ValideElServicioResult = xsd.Element(xsd.Boolean, minOccurs=1)

    @classmethod
    def create(cls, ValideElServicioResult):
        instance = cls()
        instance.ValideElServicioResult = ValideElServicioResult
        return instance


Schema_c49e7 = xsd.Schema(
    imports=[],
    includes=[],
    targetNamespace=settings.FVA_HOST,
    elementFormDefault='qualified',
    simpleTypes=[],
    attributeGroups=[],
    groups=[],
    complexTypes=[ResultadoValidacion, ArrayOfFirma, Firma, GarantiaDeValidezEnElTiempo, Detalle, Integridad, JerarquiaDeConfianza, Vigencia, TipoDeCertificado, Revocacion, FechaOficialDeLaFirma, AutoriaDelFirmante, ResumenDelResultadoDeValidacion, ArrayOfResumenDeFirma, ResumenDeFirma],
    elements={'ValideElDocumentoPdf': xsd.Element(ValideElDocumentoPdf()), 'ValideElDocumentoPdfResponse': xsd.Element(ValideElDocumentoPdfResponse()), 'ValideElDocumentoXmlEnvelopedContraFirma': xsd.Element(ValideElDocumentoXmlEnvelopedContraFirma()), 'ValideElDocumentoXmlEnvelopedContraFirmaResponse': xsd.Element(ValideElDocumentoXmlEnvelopedContraFirmaResponse()), 'ValideElDocumentoXmlEnvelopedCoFirma': xsd.Element(ValideElDocumentoXmlEnvelopedCoFirma()), 'ValideElDocumentoXmlEnvelopedCoFirmaResponse': xsd.Element(ValideElDocumentoXmlEnvelopedCoFirmaResponse()), 'ValideElDocumentoMSOffice': xsd.Element(ValideElDocumentoMSOffice()), 'ValideElDocumentoMSOfficeResponse': xsd.Element(ValideElDocumentoMSOfficeResponse()), 'ValideElDocumentoOdf': xsd.Element(ValideElDocumentoOdf()), 'ValideElDocumentoOdfResponse': xsd.Element(ValideElDocumentoOdfResponse()), 'ValideElServicio': xsd.Element(ValideElServicio()), 'ValideElServicioResponse': xsd.Element(ValideElServicioResponse())},
)


##############################################################################
# Methods


ValideElDocumentoPdf_method = xsd.Method(
    soapAction=settings.FVA_HOST + 'ValideElDocumentoPdf',
    input='ValideElDocumentoPdf',
    inputPartName='parameters',
    output='ValideElDocumentoPdfResponse',
    outputPartName='parameters',
    operationName='ValideElDocumentoPdf',
    style='document',
)


ValideElDocumentoXmlEnvelopedContraFirma_method = xsd.Method(
    soapAction=settings.FVA_HOST + 'ValideElDocumentoXmlEnvelopedContraFirma',
    input='ValideElDocumentoXmlEnvelopedContraFirma',
    inputPartName='parameters',
    output='ValideElDocumentoXmlEnvelopedContraFirmaResponse',
    outputPartName='parameters',
    operationName='ValideElDocumentoXmlEnvelopedContraFirma',
    style='document',
)


ValideElDocumentoXmlEnvelopedCoFirma_method = xsd.Method(
    soapAction=settings.FVA_HOST + 'ValideElDocumentoXmlEnvelopedCoFirma',
    input='ValideElDocumentoXmlEnvelopedCoFirma',
    inputPartName='parameters',
    output='ValideElDocumentoXmlEnvelopedCoFirmaResponse',
    outputPartName='parameters',
    operationName='ValideElDocumentoXmlEnvelopedCoFirma',
    style='document',
)


ValideElDocumentoMSOffice_method = xsd.Method(
    soapAction=settings.FVA_HOST + 'ValideElDocumentoMSOffice',
    input='ValideElDocumentoMSOffice',
    inputPartName='parameters',
    output='ValideElDocumentoMSOfficeResponse',
    outputPartName='parameters',
    operationName='ValideElDocumentoMSOffice',
    style='document',
)


ValideElDocumentoOdf_method = xsd.Method(
    soapAction=settings.FVA_HOST + 'ValideElDocumentoOdf',
    input='ValideElDocumentoOdf',
    inputPartName='parameters',
    output='ValideElDocumentoOdfResponse',
    outputPartName='parameters',
    operationName='ValideElDocumentoOdf',
    style='document',
)


ValideElServicio_method = xsd.Method(
    soapAction=settings.FVA_HOST + 'ValideElServicio',
    input='ValideElServicio',
    inputPartName='parameters',
    output='ValideElServicioResponse',
    outputPartName='parameters',
    operationName='ValideElServicio',
    style='document',
)


##############################################################################
# SOAP Service


ValidadorDeDocumentosSoap_SERVICE = soap.Service(
    name='ValidadorDeDocumentosSoap',
    targetNamespace=settings.FVA_HOST,
    location='${scheme}://${host}/'+settings.SERVICE_URLS['valida_docs_v2'],
    schemas=[Schema_c49e7],
    version=soap.SOAPVersion.SOAP12,
    methods=[ValideElDocumentoPdf_method, ValideElDocumentoXmlEnvelopedContraFirma_method, ValideElDocumentoXmlEnvelopedCoFirma_method, ValideElDocumentoMSOffice_method, ValideElDocumentoOdf_method, ValideElServicio_method],
)


##############################################################################
# SOAP Service Stub


class ValidadorDeDocumentosSoapServiceStub(soap.Stub):
    SERVICE = ValidadorDeDocumentosSoap_SERVICE
    SCHEME = settings.STUB_SCHEME
    HOST = settings.STUB_HOST

    def ValideElDocumentoPdf(self, ValideElDocumentoPdf, header=None):
        return self.call('ValideElDocumentoPdf', ValideElDocumentoPdf, header=header)

    def ValideElDocumentoXmlEnvelopedContraFirma(self, ValideElDocumentoXmlEnvelopedContraFirma, header=None):
        return self.call('ValideElDocumentoXmlEnvelopedContraFirma', ValideElDocumentoXmlEnvelopedContraFirma, header=header)

    def ValideElDocumentoXmlEnvelopedCoFirma(self, ValideElDocumentoXmlEnvelopedCoFirma, header=None):
        return self.call('ValideElDocumentoXmlEnvelopedCoFirma', ValideElDocumentoXmlEnvelopedCoFirma, header=header)

    def ValideElDocumentoMSOffice(self, ValideElDocumentoMSOffice, header=None):
        return self.call('ValideElDocumentoMSOffice', ValideElDocumentoMSOffice, header=header)

    def ValideElDocumentoOdf(self, ValideElDocumentoOdf, header=None):
        return self.call('ValideElDocumentoOdf', ValideElDocumentoOdf, header=header)

    def ValideElServicio(self, ValideElServicio, header=None):
        return self.call('ValideElServicio', ValideElServicio, header=header)

##############################################################################
# Methods


ValideElDocumentoPdf_method = xsd.Method(
    soapAction=settings.FVA_HOST + 'ValideElDocumentoPdf',
    input='ValideElDocumentoPdf',
    inputPartName='parameters',
    output='ValideElDocumentoPdfResponse',
    outputPartName='parameters',
    operationName='ValideElDocumentoPdf',
    style='document',
)


ValideElDocumentoXmlEnvelopedContraFirma_method = xsd.Method(
    soapAction=settings.FVA_HOST + 'ValideElDocumentoXmlEnvelopedContraFirma',
    input='ValideElDocumentoXmlEnvelopedContraFirma',
    inputPartName='parameters',
    output='ValideElDocumentoXmlEnvelopedContraFirmaResponse',
    outputPartName='parameters',
    operationName='ValideElDocumentoXmlEnvelopedContraFirma',
    style='document',
)


ValideElDocumentoXmlEnvelopedCoFirma_method = xsd.Method(
    soapAction=settings.FVA_HOST + 'ValideElDocumentoXmlEnvelopedCoFirma',
    input='ValideElDocumentoXmlEnvelopedCoFirma',
    inputPartName='parameters',
    output='ValideElDocumentoXmlEnvelopedCoFirmaResponse',
    outputPartName='parameters',
    operationName='ValideElDocumentoXmlEnvelopedCoFirma',
    style='document',
)


ValideElDocumentoMSOffice_method = xsd.Method(
    soapAction=settings.FVA_HOST + 'ValideElDocumentoMSOffice',
    input='ValideElDocumentoMSOffice',
    inputPartName='parameters',
    output='ValideElDocumentoMSOfficeResponse',
    outputPartName='parameters',
    operationName='ValideElDocumentoMSOffice',
    style='document',
)


ValideElDocumentoOdf_method = xsd.Method(
    soapAction=settings.FVA_HOST + 'ValideElDocumentoOdf',
    input='ValideElDocumentoOdf',
    inputPartName='parameters',
    output='ValideElDocumentoOdfResponse',
    outputPartName='parameters',
    operationName='ValideElDocumentoOdf',
    style='document',
)


ValideElServicio_method = xsd.Method(
    soapAction=settings.FVA_HOST + 'ValideElServicio',
    input='ValideElServicio',
    inputPartName='parameters',
    output='ValideElServicioResponse',
    outputPartName='parameters',
    operationName='ValideElServicio',
    style='document',
)


##############################################################################
# SOAP Service


ValidadorDeDocumentosSoap12_SERVICE = soap.Service(
    name='ValidadorDeDocumentosSoap12',
    targetNamespace=settings.FVA_HOST,
    location='${scheme}://${host}/'+settings.SERVICE_URLS['valida_docs_v2'],
    schemas=[Schema_c49e7],
    version=soap.SOAPVersion.SOAP12,
    methods=[ValideElDocumentoPdf_method, ValideElDocumentoXmlEnvelopedContraFirma_method, ValideElDocumentoXmlEnvelopedCoFirma_method, ValideElDocumentoMSOffice_method, ValideElDocumentoOdf_method, ValideElServicio_method],
)


##############################################################################
# SOAP Service Stub


class ValidadorDeDocumentosSoap12ServiceStub(soap.Stub):
    SERVICE = ValidadorDeDocumentosSoap12_SERVICE
    SCHEME = settings.STUB_SCHEME
    HOST = settings.STUB_HOST

    def ValideElDocumentoPdf(self, ValideElDocumentoPdf, header=None):
        return self.call('ValideElDocumentoPdf', ValideElDocumentoPdf, header=header)

    def ValideElDocumentoXmlEnvelopedContraFirma(self, ValideElDocumentoXmlEnvelopedContraFirma, header=None):
        return self.call('ValideElDocumentoXmlEnvelopedContraFirma', ValideElDocumentoXmlEnvelopedContraFirma, header=header)

    def ValideElDocumentoXmlEnvelopedCoFirma(self, ValideElDocumentoXmlEnvelopedCoFirma, header=None):
        return self.call('ValideElDocumentoXmlEnvelopedCoFirma', ValideElDocumentoXmlEnvelopedCoFirma, header=header)

    def ValideElDocumentoMSOffice(self, ValideElDocumentoMSOffice, header=None):
        return self.call('ValideElDocumentoMSOffice', ValideElDocumentoMSOffice, header=header)

    def ValideElDocumentoOdf(self, ValideElDocumentoOdf, header=None):
        return self.call('ValideElDocumentoOdf', ValideElDocumentoOdf, header=header)

    def ValideElServicio(self, ValideElServicio, header=None):
        return self.call('ValideElServicio', ValideElServicio, header=header)
